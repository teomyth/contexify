"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[859],{991:(n,e,i)=>{i.d(e,{R:()=>g,x:()=>t});var r=i(4700);const o={},s=r.createContext(o);function g(n){const e=r.useContext(s);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:g(n.components),r.createElement(s.Provider,{value:e},n.children)}},2235:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>t,default:()=>d,frontMatter:()=>g,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"guides/component-creation","title":"\u7ec4\u4ef6\u521b\u5efa\u6307\u5357","description":"\u672c\u6307\u5357\u63d0\u4f9b\u4e86\u4f7f\u7528 Contexify \u521b\u5efa\u53ef\u91cd\u7528\u7ec4\u4ef6\u7684\u8bf4\u660e\u3002","source":"@site/i18n/zh/docusaurus-plugin-content-docs/current/guides/component-creation.md","sourceDirName":"guides","slug":"/guides/component-creation","permalink":"/contexify/zh/docs/guides/component-creation","draft":false,"unlisted":false,"editUrl":"https://github.com/teomyth/contexify/edit/main/docs-site/docs/guides/component-creation.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"\u5e94\u7528\u7a0b\u5e8f\u7ed3\u6784\u6307\u5357","permalink":"/contexify/zh/docs/guides/application-structure"},"next":{"title":"\u6d4b\u8bd5\u6307\u5357","permalink":"/contexify/zh/docs/guides/testing"}}');var o=i(7968),s=i(991);const g={sidebar_position:2},t="\u7ec4\u4ef6\u521b\u5efa\u6307\u5357",l={},c=[{value:"\u4ec0\u4e48\u662f\u7ec4\u4ef6\uff1f",id:"\u4ec0\u4e48\u662f\u7ec4\u4ef6",level:2},{value:"\u7ec4\u4ef6\u7ed3\u6784",id:"\u7ec4\u4ef6\u7ed3\u6784",level:2},{value:"\u521b\u5efa\u7ec4\u4ef6",id:"\u521b\u5efa\u7ec4\u4ef6",level:2},{value:"1. \u5b9a\u4e49\u7ed1\u5b9a\u952e",id:"1-\u5b9a\u4e49\u7ed1\u5b9a\u952e",level:3},{value:"2. \u5b9a\u4e49\u7c7b\u578b",id:"2-\u5b9a\u4e49\u7c7b\u578b",level:3},{value:"3. \u5b9e\u73b0\u670d\u52a1",id:"3-\u5b9e\u73b0\u670d\u52a1",level:3},{value:"4. \u521b\u5efa\u7ec4\u4ef6\u7c7b",id:"4-\u521b\u5efa\u7ec4\u4ef6\u7c7b",level:3},{value:"\u4f7f\u7528\u7ec4\u4ef6",id:"\u4f7f\u7528\u7ec4\u4ef6",level:2},{value:"\u5e26\u63d0\u4f9b\u8005\u7684\u7ec4\u4ef6",id:"\u5e26\u63d0\u4f9b\u8005\u7684\u7ec4\u4ef6",level:2},{value:"\u5e26\u6269\u5c55\u70b9\u7684\u7ec4\u4ef6",id:"\u5e26\u6269\u5c55\u70b9\u7684\u7ec4\u4ef6",level:2},{value:"\u6700\u4f73\u5b9e\u8df5",id:"\u6700\u4f73\u5b9e\u8df5",level:2},{value:"\u4e0b\u4e00\u6b65",id:"\u4e0b\u4e00\u6b65",level:2}];function a(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"\u7ec4\u4ef6\u521b\u5efa\u6307\u5357",children:"\u7ec4\u4ef6\u521b\u5efa\u6307\u5357"})}),"\n",(0,o.jsx)(e.p,{children:"\u672c\u6307\u5357\u63d0\u4f9b\u4e86\u4f7f\u7528 Contexify \u521b\u5efa\u53ef\u91cd\u7528\u7ec4\u4ef6\u7684\u8bf4\u660e\u3002"}),"\n",(0,o.jsx)(e.h2,{id:"\u4ec0\u4e48\u662f\u7ec4\u4ef6",children:"\u4ec0\u4e48\u662f\u7ec4\u4ef6\uff1f"}),"\n",(0,o.jsx)(e.p,{children:"\u7ec4\u4ef6\u662f\u53ef\u4ee5\u5728\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u91cd\u7528\u7684\u76f8\u5173\u7ed1\u5b9a\u7684\u96c6\u5408\u3002\u7ec4\u4ef6\u662f\u7ec4\u7ec7\u4ee3\u7801\u548c\u4fc3\u8fdb\u6a21\u5757\u5316\u7684\u597d\u65b9\u6cd5\u3002"}),"\n",(0,o.jsx)(e.p,{children:"\u7ec4\u4ef6\u901a\u5e38\u5305\u62ec\uff1a"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"\u670d\u52a1"}),"\n",(0,o.jsx)(e.li,{children:"\u63d0\u4f9b\u8005"}),"\n",(0,o.jsx)(e.li,{children:"\u7ed1\u5b9a\u952e"}),"\n",(0,o.jsx)(e.li,{children:"\u7c7b\u578b\u5b9a\u4e49"}),"\n",(0,o.jsx)(e.li,{children:"\u914d\u7f6e"}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"\u7ec4\u4ef6\u7ed3\u6784",children:"\u7ec4\u4ef6\u7ed3\u6784"}),"\n",(0,o.jsx)(e.p,{children:"\u4ee5\u4e0b\u662f\u7ec4\u4ef6\u7684\u63a8\u8350\u7ed3\u6784\uff1a"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"components/\n\u2514\u2500\u2500 my-component/\n    \u251c\u2500\u2500 index.ts              # \u7ec4\u4ef6\u5bfc\u51fa\n    \u251c\u2500\u2500 keys.ts               # \u7ed1\u5b9a\u952e\n    \u251c\u2500\u2500 types.ts              # \u7c7b\u578b\u5b9a\u4e49\n    \u251c\u2500\u2500 services/             # \u670d\u52a1\n    \u2502   \u251c\u2500\u2500 index.ts          # \u670d\u52a1\u5bfc\u51fa\n    \u2502   \u2514\u2500\u2500 my-service.ts     # \u670d\u52a1\u5b9e\u73b0\n    \u251c\u2500\u2500 providers/            # \u63d0\u4f9b\u8005\n    \u2502   \u251c\u2500\u2500 index.ts          # \u63d0\u4f9b\u8005\u5bfc\u51fa\n    \u2502   \u2514\u2500\u2500 my-provider.ts    # \u63d0\u4f9b\u8005\u5b9e\u73b0\n    \u2514\u2500\u2500 config.ts             # \u7ec4\u4ef6\u914d\u7f6e\n"})}),"\n",(0,o.jsx)(e.h2,{id:"\u521b\u5efa\u7ec4\u4ef6",children:"\u521b\u5efa\u7ec4\u4ef6"}),"\n",(0,o.jsx)(e.p,{children:"\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u65e5\u5fd7\u7ec4\u4ef6\u4f5c\u4e3a\u793a\u4f8b\u3002"}),"\n",(0,o.jsx)(e.h3,{id:"1-\u5b9a\u4e49\u7ed1\u5b9a\u952e",children:"1. \u5b9a\u4e49\u7ed1\u5b9a\u952e"}),"\n",(0,o.jsx)(e.p,{children:"\u9996\u5148\uff0c\u4e3a\u60a8\u7684\u7ec4\u4ef6\u5b9a\u4e49\u7ed1\u5b9a\u952e\uff1a"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// components/logger/keys.ts\nexport namespace LoggerBindings {\n  export const COMPONENT = 'components.Logger';\n  export const SERVICE = 'services.Logger';\n  export const CONFIG = 'config.logger';\n}\n"})}),"\n",(0,o.jsx)(e.h3,{id:"2-\u5b9a\u4e49\u7c7b\u578b",children:"2. \u5b9a\u4e49\u7c7b\u578b"}),"\n",(0,o.jsx)(e.p,{children:"\u63a5\u4e0b\u6765\uff0c\u4e3a\u60a8\u7684\u7ec4\u4ef6\u5b9a\u4e49\u7c7b\u578b\uff1a"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// components/logger/types.ts\nexport interface LoggerConfig {\n  level: 'debug' | 'info' | 'warn' | 'error';\n  prefix?: string;\n}\n\nexport interface Logger {\n  debug(message: string, ...args: any[]): void;\n  info(message: string, ...args: any[]): void;\n  warn(message: string, ...args: any[]): void;\n  error(message: string, ...args: any[]): void;\n}\n"})}),"\n",(0,o.jsx)(e.h3,{id:"3-\u5b9e\u73b0\u670d\u52a1",children:"3. \u5b9e\u73b0\u670d\u52a1"}),"\n",(0,o.jsx)(e.p,{children:"\u73b0\u5728\uff0c\u5b9e\u73b0\u7ec4\u4ef6\u7684\u670d\u52a1\uff1a"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// components/logger/services/console-logger.ts\nimport { injectable, config } from 'contexify';\nimport { Logger, LoggerConfig } from '../types';\nimport { LoggerBindings } from '../keys';\n\n@injectable()\nexport class ConsoleLogger implements Logger {\n  constructor(\n    @config({\n      fromBinding: LoggerBindings.COMPONENT,\n      propertyPath: 'config',\n    })\n    private config: LoggerConfig = { level: 'info' }\n  ) {}\n\n  debug(message: string, ...args: any[]): void {\n    if (this.shouldLog('debug')) {\n      console.debug(`${this.getPrefix()} ${message}`, ...args);\n    }\n  }\n\n  info(message: string, ...args: any[]): void {\n    if (this.shouldLog('info')) {\n      console.info(`${this.getPrefix()} ${message}`, ...args);\n    }\n  }\n\n  warn(message: string, ...args: any[]): void {\n    if (this.shouldLog('warn')) {\n      console.warn(`${this.getPrefix()} ${message}`, ...args);\n    }\n  }\n\n  error(message: string, ...args: any[]): void {\n    if (this.shouldLog('error')) {\n      console.error(`${this.getPrefix()} ${message}`, ...args);\n    }\n  }\n\n  private shouldLog(level: string): boolean {\n    const levels = ['debug', 'info', 'warn', 'error'];\n    const configLevelIndex = levels.indexOf(this.config.level);\n    const logLevelIndex = levels.indexOf(level);\n    return logLevelIndex >= configLevelIndex;\n  }\n\n  private getPrefix(): string {\n    return this.config.prefix ? `[${this.config.prefix}]` : '';\n  }\n}\n\n// components/logger/services/index.ts\nexport * from './console-logger';\n"})}),"\n",(0,o.jsx)(e.h3,{id:"4-\u521b\u5efa\u7ec4\u4ef6\u7c7b",children:"4. \u521b\u5efa\u7ec4\u4ef6\u7c7b"}),"\n",(0,o.jsx)(e.p,{children:"\u73b0\u5728\uff0c\u521b\u5efa\u7ec4\u4ef6\u7c7b\uff1a"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// components/logger/index.ts\nimport { createBindingFromClass, Binding } from 'contexify';\nimport { ConsoleLogger } from './services';\nimport { LoggerBindings } from './keys';\nimport { LoggerConfig } from './types';\n\nexport class LoggerComponent {\n  bindings: Binding[] = [];\n\n  constructor(config: LoggerConfig = { level: 'info' }) {\n    this.bindings = [\n      // Bind the component itself\n      Binding.create(LoggerBindings.COMPONENT)\n        .to(this)\n        .tag('component'),\n\n      // Bind the logger service\n      createBindingFromClass(ConsoleLogger, {\n        key: LoggerBindings.SERVICE,\n      }).tag('service'),\n\n      // Bind the configuration\n      Binding.create(LoggerBindings.CONFIG)\n        .to(config)\n        .tag('config'),\n    ];\n  }\n}\n\n// Re-export everything\nexport * from './keys';\nexport * from './types';\nexport * from './services';\n"})}),"\n",(0,o.jsx)(e.h2,{id:"\u4f7f\u7528\u7ec4\u4ef6",children:"\u4f7f\u7528\u7ec4\u4ef6"}),"\n",(0,o.jsx)(e.p,{children:"\u73b0\u5728\u60a8\u53ef\u4ee5\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u8be5\u7ec4\u4ef6\uff1a"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"import { Context } from 'contexify';\nimport { LoggerComponent, LoggerBindings, Logger } from './components/logger';\n\n// Create a context\nconst context = new Context('application');\n\n// Add the logger component\nconst loggerComponent = new LoggerComponent({ level: 'debug', prefix: 'MyApp' });\nfor (const binding of loggerComponent.bindings) {\n  context.add(binding);\n}\n\n// Use the logger\nasync function run() {\n  const logger = await context.get<Logger>(LoggerBindings.SERVICE);\n  \n  logger.debug('This is a debug message');\n  logger.info('This is an info message');\n  logger.warn('This is a warning message');\n  logger.error('This is an error message');\n}\n\nrun().catch(err => console.error(err));\n"})}),"\n",(0,o.jsx)(e.h2,{id:"\u5e26\u63d0\u4f9b\u8005\u7684\u7ec4\u4ef6",children:"\u5e26\u63d0\u4f9b\u8005\u7684\u7ec4\u4ef6"}),"\n",(0,o.jsx)(e.p,{children:"\u63d0\u4f9b\u8005\u662f\u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u7ed1\u5b9a\uff0c\u53ef\u7528\u4e8e\u52a8\u6001\u521b\u5efa\u503c\u3002\u5b83\u4eec\u5bf9\u4e8e\u521b\u5efa\u9700\u8981\u590d\u6742\u521d\u59cb\u5316\u7684\u4f9d\u8d56\u9879\u5f88\u6709\u7528\u3002"}),"\n",(0,o.jsx)(e.p,{children:"\u8ba9\u6211\u4eec\u5411\u65e5\u5fd7\u7ec4\u4ef6\u6dfb\u52a0\u4e00\u4e2a\u6587\u4ef6\u65e5\u5fd7\u63d0\u4f9b\u8005\uff1a"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// components/logger/providers/file-logger.provider.ts\nimport { Provider, injectable, config } from 'contexify';\nimport { Logger, LoggerConfig } from '../types';\nimport { LoggerBindings } from '../keys';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nexport interface FileLoggerConfig extends LoggerConfig {\n  file: string;\n}\n\n@injectable()\nexport class FileLoggerProvider implements Provider<Logger> {\n  constructor(\n    @config({\n      fromBinding: LoggerBindings.COMPONENT,\n      propertyPath: 'fileConfig',\n    })\n    private fileConfig: FileLoggerConfig\n  ) {}\n\n  value(): Logger {\n    // Create the log directory if it doesn't exist\n    const logDir = path.dirname(this.fileConfig.file);\n    if (!fs.existsSync(logDir)) {\n      fs.mkdirSync(logDir, { recursive: true });\n    }\n\n    return {\n      debug: (message: string, ...args: any[]) => {\n        this.log('DEBUG', message, args);\n      },\n      info: (message: string, ...args: any[]) => {\n        this.log('INFO', message, args);\n      },\n      warn: (message: string, ...args: any[]) => {\n        this.log('WARN', message, args);\n      },\n      error: (message: string, ...args: any[]) => {\n        this.log('ERROR', message, args);\n      },\n    };\n  }\n\n  private log(level: string, message: string, args: any[]): void {\n    const timestamp = new Date().toISOString();\n    const prefix = this.fileConfig.prefix ? `[${this.fileConfig.prefix}]` : '';\n    const logMessage = `${timestamp} ${level} ${prefix} ${message} ${args.length ? JSON.stringify(args) : ''}`;\n    \n    fs.appendFileSync(this.fileConfig.file, logMessage + '\\n');\n  }\n}\n\n// components/logger/providers/index.ts\nexport * from './file-logger.provider';\n"})}),"\n",(0,o.jsx)(e.p,{children:"\u73b0\u5728\uff0c\u66f4\u65b0\u7ec4\u4ef6\u7c7b\u4ee5\u5305\u542b\u6587\u4ef6\u65e5\u5fd7\u63d0\u4f9b\u8005\uff1a"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// components/logger/index.ts\nimport { createBindingFromClass, Binding } from 'contexify';\nimport { ConsoleLogger } from './services';\nimport { FileLoggerProvider } from './providers';\nimport { LoggerBindings } from './keys';\nimport { LoggerConfig } from './types';\nimport { FileLoggerConfig } from './providers/file-logger.provider';\n\nexport class LoggerComponent {\n  bindings: Binding[] = [];\n\n  constructor(\n    config: LoggerConfig = { level: 'info' },\n    fileConfig?: FileLoggerConfig\n  ) {\n    this.bindings = [\n      // Bind the component itself\n      Binding.create(LoggerBindings.COMPONENT)\n        .to({ config, fileConfig })\n        .tag('component'),\n\n      // Bind the console logger service\n      createBindingFromClass(ConsoleLogger, {\n        key: LoggerBindings.SERVICE,\n      }).tag('service'),\n    ];\n\n    // Add the file logger provider if fileConfig is provided\n    if (fileConfig) {\n      this.bindings.push(\n        Binding.create(LoggerBindings.SERVICE + '.file')\n          .toProvider(FileLoggerProvider)\n          .tag('service')\n      );\n    }\n  }\n}\n\n// Re-export everything\nexport * from './keys';\nexport * from './types';\nexport * from './services';\nexport * from './providers';\n"})}),"\n",(0,o.jsx)(e.h2,{id:"\u5e26\u6269\u5c55\u70b9\u7684\u7ec4\u4ef6",children:"\u5e26\u6269\u5c55\u70b9\u7684\u7ec4\u4ef6"}),"\n",(0,o.jsx)(e.p,{children:"\u6269\u5c55\u70b9\u5141\u8bb8\u5176\u4ed6\u7ec4\u4ef6\u6269\u5c55\u60a8\u7ec4\u4ef6\u7684\u529f\u80fd\u3002\u8ba9\u6211\u4eec\u5411\u65e5\u5fd7\u7ec4\u4ef6\u6dfb\u52a0\u4e00\u4e2a\u6269\u5c55\u70b9\uff1a"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// components/logger/keys.ts\nexport namespace LoggerBindings {\n  export const COMPONENT = 'components.Logger';\n  export const SERVICE = 'services.Logger';\n  export const CONFIG = 'config.logger';\n  export const EXTENSIONS = 'extensions.logger';\n}\n\n// components/logger/types.ts\nexport interface LoggerExtension {\n  name: string;\n  log(level: string, message: string, args: any[]): void;\n}\n\n// components/logger/services/console-logger.ts\nimport { injectable, config, inject } from 'contexify';\nimport { Logger, LoggerConfig, LoggerExtension } from '../types';\nimport { LoggerBindings } from '../keys';\n\n@injectable()\nexport class ConsoleLogger implements Logger {\n  constructor(\n    @config({\n      fromBinding: LoggerBindings.COMPONENT,\n      propertyPath: 'config',\n    })\n    private config: LoggerConfig = { level: 'info' },\n    \n    @inject.tag(LoggerBindings.EXTENSIONS)\n    private extensions: LoggerExtension[] = []\n  ) {}\n\n  debug(message: string, ...args: any[]): void {\n    if (this.shouldLog('debug')) {\n      console.debug(`${this.getPrefix()} ${message}`, ...args);\n      this.notifyExtensions('debug', message, args);\n    }\n  }\n\n  info(message: string, ...args: any[]): void {\n    if (this.shouldLog('info')) {\n      console.info(`${this.getPrefix()} ${message}`, ...args);\n      this.notifyExtensions('info', message, args);\n    }\n  }\n\n  warn(message: string, ...args: any[]): void {\n    if (this.shouldLog('warn')) {\n      console.warn(`${this.getPrefix()} ${message}`, ...args);\n      this.notifyExtensions('warn', message, args);\n    }\n  }\n\n  error(message: string, ...args: any[]): void {\n    if (this.shouldLog('error')) {\n      console.error(`${this.getPrefix()} ${message}`, ...args);\n      this.notifyExtensions('error', message, args);\n    }\n  }\n\n  private shouldLog(level: string): boolean {\n    const levels = ['debug', 'info', 'warn', 'error'];\n    const configLevelIndex = levels.indexOf(this.config.level);\n    const logLevelIndex = levels.indexOf(level);\n    return logLevelIndex >= configLevelIndex;\n  }\n\n  private getPrefix(): string {\n    return this.config.prefix ? `[${this.config.prefix}]` : '';\n  }\n\n  private notifyExtensions(level: string, message: string, args: any[]): void {\n    for (const extension of this.extensions) {\n      try {\n        extension.log(level, message, args);\n      } catch (error) {\n        console.error(`Error in logger extension ${extension.name}:`, error);\n      }\n    }\n  }\n}\n"})}),"\n",(0,o.jsx)(e.p,{children:"\u73b0\u5728\uff0c\u5176\u4ed6\u7ec4\u4ef6\u53ef\u4ee5\u6269\u5c55\u65e5\u5fd7\u7ec4\u4ef6\uff1a"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// components/metrics/index.ts\nimport { Binding } from 'contexify';\nimport { LoggerBindings, LoggerExtension } from '../logger';\n\nexport class MetricsLoggerExtension implements LoggerExtension {\n  name = 'metrics';\n\n  log(level: string, message: string, args: any[]): void {\n    // Track metrics for log events\n    if (level === 'error') {\n      // Increment error counter\n      this.incrementErrorCounter();\n    }\n  }\n\n  private incrementErrorCounter(): void {\n    // Implementation details\n  }\n}\n\nexport class MetricsComponent {\n  bindings: Binding[] = [\n    Binding.create(`${LoggerBindings.EXTENSIONS}.metrics`)\n      .to(new MetricsLoggerExtension())\n      .tag(LoggerBindings.EXTENSIONS),\n  ];\n}\n"})}),"\n",(0,o.jsx)(e.h2,{id:"\u6700\u4f73\u5b9e\u8df5",children:"\u6700\u4f73\u5b9e\u8df5"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"\u5355\u4e00\u804c\u8d23"}),"\uff1a\u6bcf\u4e2a\u7ec4\u4ef6\u5e94\u8be5\u6709\u4e00\u4e2a\u5355\u4e00\u7684\u804c\u8d23"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"\u6e05\u6670\u7684\u63a5\u53e3"}),"\uff1a\u4e3a\u7ec4\u4ef6\u7684\u670d\u52a1\u5b9a\u4e49\u6e05\u6670\u7684\u63a5\u53e3"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"\u914d\u7f6e"}),"\uff1a\u4f7f\u7ec4\u4ef6\u53ef\u914d\u7f6e"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"\u6269\u5c55\u70b9"}),"\uff1a\u4e3a\u5176\u4ed6\u7ec4\u4ef6\u63d0\u4f9b\u6269\u5c55\u70b9"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"\u6587\u6863"}),"\uff1a\u8bb0\u5f55\u7ec4\u4ef6\u7684 API \u548c\u914d\u7f6e\u9009\u9879"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"\u6d4b\u8bd5"}),"\uff1a\u4e3a\u7ec4\u4ef6\u7f16\u5199\u6d4b\u8bd5"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"\u7248\u672c\u63a7\u5236"}),"\uff1a\u4e3a\u7ec4\u4ef6\u4f7f\u7528\u8bed\u4e49\u7248\u672c\u63a7\u5236"]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"\u4e0b\u4e00\u6b65",children:"\u4e0b\u4e00\u6b65"}),"\n",(0,o.jsx)(e.p,{children:"\u73b0\u5728\u60a8\u5df2\u7ecf\u4e86\u89e3\u4e86\u5982\u4f55\u521b\u5efa\u7ec4\u4ef6\uff0c\u53ef\u4ee5\u4e86\u89e3\uff1a"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.a,{href:"./application-structure",children:"\u5e94\u7528\u7a0b\u5e8f\u7ed3\u6784"})," - \u5982\u4f55\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.a,{href:"./testing",children:"\u6d4b\u8bd5"})," - \u5982\u4f55\u6d4b\u8bd5\u7ec4\u4ef6"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.a,{href:"../category/core-concepts",children:"\u6838\u5fc3\u6982\u5ff5"})," - \u4e86\u89e3 Contexify \u7684\u6838\u5fc3\u6982\u5ff5"]}),"\n"]})]})}function d(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(a,{...n})}):a(n)}}}]);