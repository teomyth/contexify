"use strict";(self.webpackChunk_contexify_docs_site=self.webpackChunk_contexify_docs_site||[]).push([[632],{658:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"guides/documentation","title":"Documentation Development Guide","description":"This guide provides detailed instructions on how to maintain and update Contexify documentation.","source":"@site/docs/guides/documentation.md","sourceDirName":"guides","slug":"/guides/documentation","permalink":"/contexify/docs/guides/documentation","draft":false,"unlisted":false,"editUrl":"https://github.com/teomyth/contexify/edit/main/docs-site/docs/guides/documentation.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Testing Guide","permalink":"/contexify/docs/guides/testing"},"next":{"title":"API Overview","permalink":"/contexify/docs/api/overview"}}');var o=t(7968),s=t(9880);const c={sidebar_position:4},l="Documentation Development Guide",d={},a=[{value:"Documentation Structure",id:"documentation-structure",level:2},{value:"Documentation Code Examples",id:"documentation-code-examples",level:2},{value:"Writing Code Examples",id:"writing-code-examples",level:3},{value:"Testing Code Examples",id:"testing-code-examples",level:3},{value:"Integrating Code Examples into Documentation",id:"integrating-code-examples-into-documentation",level:2},{value:"Updating Documentation Code",id:"updating-documentation-code",level:4},{value:"Testing Documentation Code",id:"testing-documentation-code",level:4},{value:"Previewing Documentation Locally",id:"previewing-documentation-locally",level:2},{value:"Building Documentation",id:"building-documentation",level:2},{value:"Serving Documentation Locally",id:"serving-documentation-locally",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Documentation Release Process",id:"documentation-release-process",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Documentation Validation Fails",id:"documentation-validation-fails",level:3},{value:"Documentation Update Fails",id:"documentation-update-fails",level:3}];function r(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"documentation-development-guide",children:"Documentation Development Guide"})}),"\n",(0,o.jsx)(n.p,{children:"This guide provides detailed instructions on how to maintain and update Contexify documentation."}),"\n",(0,o.jsx)(n.h2,{id:"documentation-structure",children:"Documentation Structure"}),"\n",(0,o.jsx)(n.p,{children:"Contexify's documentation system consists of the following parts:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"docs-site"}),": Documentation website built with Docusaurus"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"docs-code"}),": Contains executable code examples used to validate code snippets in the documentation"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"documentation-code-examples",children:"Documentation Code Examples"}),"\n",(0,o.jsxs)(n.p,{children:["To ensure that code examples in the documentation are accurate and runnable, we use the ",(0,o.jsx)(n.code,{children:"docs-code"})," directory to store and validate these examples."]}),"\n",(0,o.jsx)(n.h3,{id:"writing-code-examples",children:"Writing Code Examples"}),"\n",(0,o.jsx)(n.p,{children:"When adding new code examples to the documentation, follow these steps:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Create a new TypeScript file in the ",(0,o.jsx)(n.code,{children:"docs-code"})," directory, with a filename that reflects the purpose of the example"]}),"\n",(0,o.jsx)(n.li,{children:"Implement a complete, runnable code example"}),"\n",(0,o.jsx)(n.li,{children:"Ensure the code example can run independently and includes all necessary imports"}),"\n",(0,o.jsx)(n.li,{children:"Add appropriate comments explaining key parts of the code"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// docs-code/core-concepts/binding-example.ts\nimport { Context, injectable, inject } from 'contexify';\n\n// Create a service class\n@injectable()\nclass GreetingService {\n  sayHello(name: string) {\n    return `Hello, ${name}!`;\n  }\n}\n\n// Create a class that uses GreetingService\n@injectable()\nclass Greeter {\n  constructor(@inject('services.GreetingService') private greetingService: GreetingService) {}\n\n  greet(name: string) {\n    return this.greetingService.sayHello(name);\n  }\n}\n\n// Run the example\nasync function main() {\n  // Create a context\n  const context = new Context('example');\n  \n  // Bind services\n  context.bind('services.GreetingService').toClass(GreetingService);\n  context.bind('services.Greeter').toClass(Greeter);\n  \n  // Get Greeter instance\n  const greeter = await context.get<Greeter>('services.Greeter');\n  \n  // Use Greeter\n  console.log(greeter.greet('World'));\n}\n\n// If this file is run directly, execute the main function\nif (typeof require !== 'undefined' && require.main === module) {\n  main().catch(console.error);\n}\n\n// Export functions for testing\nexport { main };\n"})}),"\n",(0,o.jsx)(n.h3,{id:"testing-code-examples",children:"Testing Code Examples"}),"\n",(0,o.jsx)(n.p,{children:"All code examples should have corresponding tests to ensure they work correctly:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Create a test file in the ",(0,o.jsx)(n.code,{children:"docs-code/tests"})," directory"]}),"\n",(0,o.jsx)(n.li,{children:"Write tests using Vitest to verify the functionality of the code example"}),"\n",(0,o.jsx)(n.li,{children:"Ensure tests cover the main functionality of the code example"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// docs-code/tests/binding-example.test.ts\nimport { describe, it, expect } from 'vitest';\nimport { main } from '../core-concepts/binding-example';\n\ndescribe('Binding Example', () => {\n  it('should run without errors', async () => {\n    // Capture console output\n    const originalConsoleLog = console.log;\n    let output = '';\n    \n    console.log = (message) => {\n      output = message;\n    };\n    \n    // Run the example\n    await main();\n    \n    // Restore console\n    console.log = originalConsoleLog;\n    \n    // Verify output\n    expect(output).toBe('Hello, World!');\n  });\n});\n"})}),"\n",(0,o.jsx)(n.h2,{id:"integrating-code-examples-into-documentation",children:"Integrating Code Examples into Documentation"}),"\n",(0,o.jsx)(n.p,{children:"To integrate code examples into the documentation, use special markers to indicate where the code example should be placed:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-markdown",children:"\x3c!-- CODE:binding-example:START --\x3e\n```typescript\n// Content here will be automatically updated\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"\nThese markers tell the documentation update system where to insert the code example.\n\n## Documentation Update Process\n\nWhen code structure changes, follow this process to update the documentation:\n\n1. Update code examples in `docs-code` to match the new code structure\n2. Run tests to ensure code examples work correctly\n3. Use the documentation update scripts to synchronize changes to the documentation\n\n### Automated Documentation Updates\n\nContexify provides several scripts to automate the documentation update process:\n\n#### Validating Documentation Code\n\nRun the following command to validate all code examples in the documentation:\n\n```bash\nnpm run docs:validate\n"})}),"\n",(0,o.jsx)(n.p,{children:"This command will:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Extract all code examples from the documentation"}),"\n",(0,o.jsx)(n.li,{children:"Convert them to executable TypeScript files"}),"\n",(0,o.jsx)(n.li,{children:"Run these files to ensure they have no errors"}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"updating-documentation-code",children:"Updating Documentation Code"}),"\n",(0,o.jsx)(n.p,{children:"Run the following command to update code examples in the documentation:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm run docs:update\n"})}),"\n",(0,o.jsx)(n.p,{children:"This command will:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Read all TypeScript files in the ",(0,o.jsx)(n.code,{children:"docs-code"})," directory"]}),"\n",(0,o.jsx)(n.li,{children:"Extract code content (removing import and export statements)"}),"\n",(0,o.jsx)(n.li,{children:"Update corresponding code examples in the documentation"}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"testing-documentation-code",children:"Testing Documentation Code"}),"\n",(0,o.jsx)(n.p,{children:"Run the following command to test the documentation code:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm run docs:test\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This command will run all tests in the ",(0,o.jsx)(n.code,{children:"docs-code"})," directory to ensure code examples work correctly."]}),"\n",(0,o.jsx)(n.h2,{id:"previewing-documentation-locally",children:"Previewing Documentation Locally"}),"\n",(0,o.jsx)(n.p,{children:"To preview the documentation website locally, run:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm run docs:start\n"})}),"\n",(0,o.jsx)(n.p,{children:"This command will start the Docusaurus development server and open the documentation website in your browser. You can see changes in real-time."}),"\n",(0,o.jsx)(n.h2,{id:"building-documentation",children:"Building Documentation"}),"\n",(0,o.jsx)(n.p,{children:"To build the documentation website, run:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm run docs:build\n"})}),"\n",(0,o.jsx)(n.p,{children:"This command will generate static HTML files that can be deployed to any static website hosting service."}),"\n",(0,o.jsx)(n.h2,{id:"serving-documentation-locally",children:"Serving Documentation Locally"}),"\n",(0,o.jsx)(n.p,{children:"To serve the built documentation locally, run:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm run docs:serve\n"})}),"\n",(0,o.jsx)(n.p,{children:"This command will start a local server serving the built documentation website."}),"\n",(0,o.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Keep in Sync"}),": Ensure code examples in ",(0,o.jsx)(n.code,{children:"docs-code"})," stay in sync with the actual codebase"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Complete Examples"}),": Provide complete, runnable code examples rather than fragments"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Test Coverage"}),": Write tests for all code examples"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Regular Validation"}),": Regularly run the ",(0,o.jsx)(n.code,{children:"docs:validate"})," command to ensure code examples in the documentation are still valid"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Update Documentation"}),": Update documentation immediately after code structure changes"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"documentation-release-process",children:"Documentation Release Process"}),"\n",(0,o.jsx)(n.p,{children:"When preparing to release a new version of the documentation, follow these steps:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Ensure all code examples are updated and pass tests"}),"\n",(0,o.jsxs)(n.li,{children:["Run ",(0,o.jsx)(n.code,{children:"npm run docs:validate"})," to ensure code examples in the documentation are valid"]}),"\n",(0,o.jsxs)(n.li,{children:["Run ",(0,o.jsx)(n.code,{children:"npm run docs:build"})," to build the documentation website"]}),"\n",(0,o.jsx)(n.li,{children:"Check that the built documentation website is correct"}),"\n",(0,o.jsx)(n.li,{children:"Deploy the documentation website"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,o.jsx)(n.h3,{id:"documentation-validation-fails",children:"Documentation Validation Fails"}),"\n",(0,o.jsxs)(n.p,{children:["If the ",(0,o.jsx)(n.code,{children:"docs:validate"})," command fails, it may be because:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Code examples in the documentation contain errors"}),"\n",(0,o.jsx)(n.li,{children:"Code examples depend on packages that are not installed"}),"\n",(0,o.jsx)(n.li,{children:"Code examples use incompatible APIs"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Solution:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Check the error message to determine the issue"}),"\n",(0,o.jsx)(n.li,{children:"Update the code examples to fix the errors"}),"\n",(0,o.jsxs)(n.li,{children:["Run the ",(0,o.jsx)(n.code,{children:"docs:validate"})," command again"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"documentation-update-fails",children:"Documentation Update Fails"}),"\n",(0,o.jsxs)(n.p,{children:["If the ",(0,o.jsx)(n.code,{children:"docs:update"})," command fails, it may be because:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"The documentation is missing necessary markers"}),"\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"docs-code"})," directory is missing corresponding code files"]}),"\n",(0,o.jsx)(n.li,{children:"File permission issues"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Solution:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Ensure the documentation contains the correct markers"}),"\n",(0,o.jsxs)(n.li,{children:["Ensure the ",(0,o.jsx)(n.code,{children:"docs-code"})," directory contains the corresponding code files"]}),"\n",(0,o.jsx)(n.li,{children:"Check file permissions"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(r,{...e})}):r(e)}},9880:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>l});var i=t(4700);const o={},s=i.createContext(o);function c(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);