"use strict";(self.webpackChunk_contexify_docs_site=self.webpackChunk_contexify_docs_site||[]).push([[941],{5362:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>r,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"best-practices/application-architecture","title":"Application Architecture","description":"This document provides best practices for structuring your application using Contexify.","source":"@site/docs/best-practices/application-architecture.md","sourceDirName":"best-practices","slug":"/best-practices/application-architecture","permalink":"/contexify/docs/best-practices/application-architecture","draft":false,"unlisted":false,"editUrl":"https://github.com/teomyth/contexify/edit/main/docs-site/docs/best-practices/application-architecture.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Best Practices Overview","permalink":"/contexify/docs/best-practices/"},"next":{"title":"Dependency Injection Best Practices","permalink":"/contexify/docs/best-practices/dependency-injection"}}');var c=t(7968),o=t(9880);const s={sidebar_position:2},a="Application Architecture",r={},l=[{value:"Application Class Extending Context",id:"application-class-extending-context",level:2},{value:"Components and Modular Design",id:"components-and-modular-design",level:2},{value:"Lifecycle Management",id:"lifecycle-management",level:2}];function p(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...n.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(e.header,{children:(0,c.jsx)(e.h1,{id:"application-architecture",children:"Application Architecture"})}),"\n",(0,c.jsx)(e.p,{children:"This document provides best practices for structuring your application using Contexify."}),"\n",(0,c.jsx)(e.h2,{id:"application-class-extending-context",children:"Application Class Extending Context"}),"\n",(0,c.jsx)(e.p,{children:"Create an application class that extends Context as the core of your application:"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-typescript",children:"import { Context, injectable } from 'contexify';\n\nexport class MyApplication extends Context {\n  constructor() {\n    super('application');\n  }\n\n  async setup() {\n    // Register core services\n    this.bind('logger').toClass(Logger);\n\n    // Add components\n    this.component(AuthComponent);\n    this.component(ApiComponent);\n\n    // You could perform async initialization here\n    // For example, connecting to databases, loading configurations, etc.\n    await Promise.resolve(); // Placeholder for actual async operations\n\n    console.log('Application setup completed');\n    return this;\n  }\n\n  async start() {\n    // Start the application\n    console.log('Application starting...');\n    // Startup logic...\n  }\n\n  async stop() {\n    // Stop the application\n    console.log('Application stopping...');\n    // Cleanup logic...\n    this.close(); // Close the Context\n  }\n}\n"})}),"\n",(0,c.jsx)(e.h2,{id:"components-and-modular-design",children:"Components and Modular Design"}),"\n",(0,c.jsx)(e.p,{children:"Components are collections of related bindings used to extend application functionality:"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-typescript",children:"import { injectable, Binding } from 'contexify';\n\nexport interface Component {\n  bindings?: Binding[];\n  providers?: Constructor<Provider<unknown>>[];\n}\n\n@injectable()\nexport class AuthComponent implements Component {\n  bindings = [\n    createBindingFromClass(AuthService),\n    createBindingFromClass(TokenService),\n  ];\n}\n"})}),"\n",(0,c.jsx)(e.p,{children:"Using components allows you to:"}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"Group related functionality together"}),"\n",(0,c.jsx)(e.li,{children:"Promote modular design"}),"\n",(0,c.jsx)(e.li,{children:"Support a pluggable architecture"}),"\n",(0,c.jsx)(e.li,{children:"Simplify dependency management"}),"\n"]}),"\n",(0,c.jsx)(e.h2,{id:"lifecycle-management",children:"Lifecycle Management"}),"\n",(0,c.jsx)(e.p,{children:"Your application should manage the lifecycle of components and services:"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-typescript",children:"export class MyApplication extends Context {\n  // ...\n\n  async start() {\n    // Get all services that need initialization\n    const initializers = await this.findByTag('initializer');\n\n    // Initialize in sequence\n    for (const initializer of initializers) {\n      const service = await this.get(initializer.key);\n      await service.initialize();\n    }\n\n    console.log('Application started');\n  }\n\n  async stop() {\n    // Get all services that need cleanup\n    const cleaners = await this.findByTag('cleaner');\n\n    // Clean up in sequence\n    for (const cleaner of cleaners) {\n      const service = await this.get(cleaner.key);\n      await service.cleanup();\n    }\n\n    this.close();\n    console.log('Application stopped');\n  }\n}\n"})})]})}function d(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,c.jsx)(e,{...n,children:(0,c.jsx)(p,{...n})}):p(n)}},9880:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>a});var i=t(4700);const c={},o=i.createContext(c);function s(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(c):n.components||c:s(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);