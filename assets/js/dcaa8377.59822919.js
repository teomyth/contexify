"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[963],{991:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>s});var i=t(4700);const o={},a=i.createContext(o);function r(n){const e=i.useContext(a);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),i.createElement(a.Provider,{value:e},n.children)}},4553:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"examples/modular-app","title":"Modular Application Example","description":"This example demonstrates how to build a modular application using Contexify.","source":"@site/docs/examples/modular-app.md","sourceDirName":"examples","slug":"/examples/modular-app","permalink":"/contexify/docs/examples/modular-app","draft":false,"unlisted":false,"editUrl":"https://github.com/teomyth/contexify/edit/main/docs-site/docs/examples/modular-app.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Features Examples","permalink":"/contexify/docs/examples/features"},"next":{"title":"Interceptors Example","permalink":"/contexify/docs/examples/interceptors"}}');var o=t(7968),a=t(991);const r={sidebar_position:2},s="Modular Application Example",p={},c=[{value:"Overview",id:"overview",level:2},{value:"Application Class",id:"application-class",level:2},{value:"Authentication Component",id:"authentication-component",level:2},{value:"API Component",id:"api-component",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Entry Point",id:"entry-point",level:2},{value:"Key Points",id:"key-points",level:2},{value:"Complete Example",id:"complete-example",level:2}];function l(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"modular-application-example",children:"Modular Application Example"})}),"\n",(0,o.jsx)(e.p,{children:"This example demonstrates how to build a modular application using Contexify."}),"\n",(0,o.jsx)(e.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(e.p,{children:"The modular application example shows how to:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Structure a modular application"}),"\n",(0,o.jsx)(e.li,{children:"Create and use components"}),"\n",(0,o.jsx)(e.li,{children:"Manage dependencies between components"}),"\n",(0,o.jsx)(e.li,{children:"Configure the application"}),"\n",(0,o.jsx)(e.li,{children:"Handle application lifecycle"}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"application-class",children:"Application Class"}),"\n",(0,o.jsxs)(e.p,{children:["The application class is the core of the modular application. It extends the ",(0,o.jsx)(e.code,{children:"Context"})," class and serves as the root context for the application."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// Application class\nimport { Context } from 'contexify';\nimport { AuthComponent } from './components/authentication';\nimport { ApiComponent } from './components/api';\nimport { ConfigKeys, configureApplication } from './config';\n\nexport class ModularApplication extends Context {\n  constructor() {\n    super('application');\n  }\n\n  async setup() {\n    // Configure the application\n    configureApplication(this);\n\n    // Add components\n    this.component(new AuthComponent());\n    this.component(new ApiComponent());\n\n    // You could perform async initialization here\n    // For example, connecting to databases, loading configurations, etc.\n    await Promise.resolve(); // Placeholder for actual async operations\n\n    console.log('Application setup completed');\n    return this;\n  }\n\n  // Add a component to the application\n  component(component: { bindings?: any[] }) {\n    if (component.bindings) {\n      for (const binding of component.bindings) {\n        this.add(binding);\n      }\n    }\n    return this;\n  }\n\n  // Start the application\n  async start() {\n    console.log('Application starting...');\n\n    // Get the server configuration\n    const serverConfig = await this.get(ConfigKeys.SERVER);\n\n    console.log(`Server listening on port ${serverConfig.port}`);\n  }\n\n  // Stop the application\n  async stop() {\n    console.log('Application stopping...');\n\n    // Application cleanup logic\n    this.close();\n  }\n}\n"})}),"\n",(0,o.jsx)(e.h2,{id:"authentication-component",children:"Authentication Component"}),"\n",(0,o.jsx)(e.p,{children:"The authentication component provides authentication services for the application."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// Authentication component\nimport { createBindingFromClass, Binding } from 'contexify';\nimport { DefaultAuthService } from './services';\nimport { DefaultAuthProvider } from './providers';\nimport { AuthBindings } from './keys';\n\nexport class AuthComponent {\n  bindings = [\n    // Bind the component itself\n    Binding.create(AuthBindings.COMPONENT)\n      .to(this)\n      .tag('component'),\n\n    // Bind the auth service\n    createBindingFromClass(DefaultAuthService, {\n      key: AuthBindings.SERVICE,\n    }).tag('service'),\n\n    // Bind the auth provider\n    createBindingFromClass(DefaultAuthProvider, {\n      key: AuthBindings.PROVIDER,\n    }).tag('provider'),\n  ];\n}\n"})}),"\n",(0,o.jsx)(e.h2,{id:"api-component",children:"API Component"}),"\n",(0,o.jsx)(e.p,{children:"The API component provides controllers for the application's API."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// API component\nimport { createBindingFromClass, Binding } from 'contexify';\nimport { UserController } from './controllers';\nimport { ApiBindings } from './keys';\n\nexport class ApiComponent {\n  bindings = [\n    // Bind the component itself\n    Binding.create(ApiBindings.COMPONENT)\n      .to(this)\n      .tag('component'),\n\n    // Bind the user controller\n    createBindingFromClass(UserController, {\n      key: ApiBindings.CONTROLLER,\n    }).tag('controller'),\n  ];\n}\n"})}),"\n",(0,o.jsx)(e.h2,{id:"configuration",children:"Configuration"}),"\n",(0,o.jsx)(e.p,{children:"The configuration directory contains the configuration for the application."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// Configuration\nimport { Context } from 'contexify';\nimport { ConfigKeys } from './keys';\n\nexport interface ServerConfig {\n  port: number;\n  host: string;\n}\n\nexport function configureApplication(app: Context) {\n  // Server configuration\n  app.bind(ConfigKeys.SERVER).to({\n    port: parseInt(process.env.PORT || '3000'),\n    host: process.env.HOST || 'localhost',\n  });\n}\n"})}),"\n",(0,o.jsx)(e.h2,{id:"entry-point",children:"Entry Point"}),"\n",(0,o.jsx)(e.p,{children:"The entry point of the application creates and starts the application."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// Entry point\nimport { ModularApplication } from './application';\n\nasync function main() {\n  // Create the application\n  const app = new ModularApplication();\n\n  // Setup the application\n  await app.setup();\n\n  // Start the application\n  await app.start();\n\n  console.log('Application is running');\n\n  // Handle shutdown\n  process.on('SIGINT', async () => {\n    console.log('Shutting down...');\n    await app.stop();\n    process.exit(0);\n  });\n}\n\nmain().catch(err => {\n  console.error('Failed to start application:', err);\n  process.exit(1);\n});\n"})}),"\n",(0,o.jsx)(e.h2,{id:"key-points",children:"Key Points"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Modular Architecture"}),": The application is organized into components, each with its own responsibilities"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Dependency Injection"}),": Components depend on each other through dependency injection"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Configuration"}),": The application is configured through the context"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Lifecycle Management"}),": The application manages the lifecycle of its components"]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"complete-example",children:"Complete Example"}),"\n",(0,o.jsxs)(e.p,{children:["The complete example code can be found in the ",(0,o.jsx)(e.a,{href:"https://github.com/teomyth/contexify/tree/main/examples/modular-app",children:"examples/modular-app"})," directory."]})]})}function d(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(l,{...n})}):l(n)}}}]);